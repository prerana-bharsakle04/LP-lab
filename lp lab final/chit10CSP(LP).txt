chit10:CSP(LP)

def is_safe(arr, x, y, n):
    # Check the column for any queen
    for i in range(x):
        if arr[i][y] == 1:
            return False
    
    # Check upper left diagonal
    for i, j in zip(range(x, -1, -1), range(y, -1, -1)):
        if arr[i][j] == 1:
            return False
    
    # Check upper right diagonal
    for i, j in zip(range(x, -1, -1), range(y, n)):
        if arr[i][j] == 1:
            return False
    
    return True

def n_queen(arr, x, n):
    if x >= n:
        return True
    
    for col in range(n):
        if is_safe(arr, x, col, n):
            arr[x][col] = 1
            if n_queen(arr, x + 1, n):
                return True
            arr[x][col] = 0  # Backtrack if the current placement doesn't lead to a solution
    
    return False

def main():
    n = int(input("Enter number of Queens: "))
    arr = [[0] * n for _ in range(n)]
    
    if n_queen(arr, 0, n):
        for i in range(n):
            for j in range(n):
                print(arr[i][j], end=" ")
            print()
    else:
        print("No solution exists.")

if __name__ == '__main__':
    main()
